<?xml version="1.0" encoding="utf-8"?>
<components:CustomPanelSpark xmlns:fx="http://ns.adobe.com/mxml/2009" 
							 xmlns:s="library://ns.adobe.com/flex/spark" title="Seleccionar Items" 
							 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="components.*" width="400" height="300">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import controller.Controller;
			
			import event.MantenedoresEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.gridClasses.GridColumn;
			
			import vo.CategoriaVO;
			import vo.ClasificacionVO;
			[Bindable] public var objVO:*;
			public var fnActualizaData:Function;
			
			[Bindable] public var dgDataProvider:ArrayCollection;
			[Bindable] public var dgDataProvider2:ArrayCollection = new ArrayCollection();
			[Bindable] public var campoVisible:String;
			[Bindable] public var idCampoVisible:String;
			public var eventoEjecucion:String;
			
			public var idClas:String;
			public var idCat:String;
			
			protected function fnCerrar(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(this);
			}
			
			protected function fnAgregarcategorias(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var arr:Array = [];
				for each(var obj:Object in objVO.arrAsociadosOut){
					if(obj.sel == true){
						arr.push(obj['obj'][idCampoVisible]);	
					}
					
				}
				var arrParam:Array = [objVO];
				if(idClas){
					arrParam.push(idClas);
				}
				if(idCat){
					arrParam.push(idCat);
				}
				arrParam.push(arr);
				var manEvent:MantenedoresEvent = new MantenedoresEvent(eventoEjecucion, fnActualizaData, arrParam);
				Controller.getInstance().dispatchEvent(manEvent);
				fnCerrar(null);
			}
			
			protected function dgOut_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				var g:GridColumn = new GridColumn();
				g.headerText = 'ID';
				g.dataField = 'obj.' + idCampoVisible;
				arList.addItem(g);
				g = new GridColumn();
				g.headerText = 'Nombre';
				g.dataField = 'obj.' + campoVisible;
				arList.addItem(g);
				g = new GridColumn();
				g.headerText = 'Sel';
				g.dataField = 'sel';
				g.rendererIsEditable = true;
				var productRenderer:ClassFactory = new ClassFactory(components.RenderSel);
				
				g.itemRenderer = productRenderer;
				arList.addItem(g);
			}
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" horizontalAlign="center">
		<s:DataGrid id="dgOut" dataProvider="{objVO.arrAsociadosOut}" width="100%" height="200" creationComplete="dgOut_creationCompleteHandler(event)">
			<s:columns>
				<s:ArrayList id="arList">
					
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<s:HGroup>
			<s:Button label="Agregar" width="100" click="fnAgregarcategorias(event)"/>
			<s:Button label="Cancelar" width="100" click="fnCerrar(event)" skinClass="assets.skins.ButtonCleanLVSkin"/>
			
		</s:HGroup>	
	</s:VGroup>
	
</components:CustomPanelSpark>
