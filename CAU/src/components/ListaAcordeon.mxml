<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="50" xmlns:components="components.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import spark.effects.Resize;
			
			[Bindable] public var arrData:Array;
			[Bindable] public var img:String; 
			[Bindable] public var label:String;
			[Bindable] public var selected:int;
			[Bindable] public var arrElementos:ArrayCollection = new ArrayCollection();
			
			protected function fnDespliegue():void
			{
				// TODO Auto-generated method stub
				
				if(btnDespliegue.selected){
					if(this.parentDocument is ListaAcordeon){
						this.parentDocument.height += vgContenedor.height;
					}
					var res:Resize = new Resize(this);
					res.duration = 300;
					res.heightTo = vgContenedorTotal.height;
					res.play();
					rectCostado.width = 5;
					selected = 1;
					//rectCostado.height = vgContenedorTotal.height;
				} else {
					//res.reverse();
					if(this.parentDocument is ListaAcordeon){
						this.parentDocument.height -= vgContenedor.height;
					}
					res = new Resize(this);
					res.duration = 300;
					res.heightTo = 50;
					res.play();
					rectCostado.width = 0;
					selected = 2;
					
				}
			}
			
			public function set crearHijos(arr:Array):void{
				if(arr){
					vgContenedor.removeAllElements();
					for each(var obj:* in arr){
						if(obj['data'].hasOwnProperty('label')){
							var cusbtn:CustomToggleButtonLista = new CustomToggleButtonLista();
							cusbtn.label = obj['data'].label;
							cusbtn.addEventListener(MouseEvent.CLICK, obj['data']['accion']); 
							vgContenedor.addElement(cusbtn);
							cusbtn.percentWidth = 100;
							arrElementos.addItem(cusbtn);
						} else {
							var list:ListaAcordeon = new ListaAcordeon();
							vgContenedor.addElement(list);
							list.arrData = obj['data'];
							list.img = obj['img'];
							list.label = obj['label'];
							list.percentWidth = 100;
							arrElementos.addItem(list);
						}
					}	
				}
				
				
			}
			
			protected function fnReestablecerBotones(evento:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				/*evento.stopImmediatePropagation();
				evento.stopPropagation();*/
				if(arrElementos.getItemIndex(evento.target) > -1){
					var objAux:* = arrElementos.removeItemAt(arrElementos.getItemIndex(evento.target));
				} else {
					objAux = arrElementos.removeItemAt(arrElementos.getItemIndex(evento.target.parentDocument));	
				}
				
				for each(var obj:* in arrElementos){
					if(obj is ListaAcordeon){
						obj.selected = 2;
					} else {
						obj.selected = false;	
					}
					
				} 
				arrElementos.addItem(objAux);
				
				
			}
			
			
			/*private function set fnRedimencionar(val:Number):void{
				if(this.parentDocument is ListaAcordeon){
					this.parentDocument.fnDespliegue(null);
				}
				
			}*/
			
			
			private function set fnActivar(val:int):void{
				if(val != 0){
					btnDespliegue.selected = val == 1 ? true : false;
					fnDespliegue();	
				}
				
			}
			
			protected function btnDespliegue_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(btnDespliegue.selected){
					selected = 1;
				} else {
					selected = 2;
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Binding source="arrData" destination="crearHijos"/>
	<!--<fx:Binding source="height" destination="fnRedimencionar"/>-->
	<fx:Binding source="selected" destination="fnActivar"/>
	<s:layout>
		<s:HorizontalLayout gap="0"/>
	</s:layout>
	<s:Rect width="0" height="100%" id="rectCostado">
		<s:fill>
			<!--<s:BitmapFill source="@Embed(source='assets/imgs/skin-cloth.jpg')" fillMode="repeat"/>-->
			<s:SolidColor color="#19aa8d"/>
		</s:fill>
	</s:Rect>
	<!--<components:CustomToggleButtonLista icon="@Embed(source='assets/icons/tipificacion.png')" width="50" height="50" skinClass="assets.skins.CustomToggleButtonListadoSkin"/>-->
	<s:VGroup gap="0" width="100%" id="vgContenedorTotal">
		<components:CustomToggleButtonLista label="{label}" img="{img}" click="btnDespliegue_clickHandler(event)" skinClass="assets.skins.CustomToggleButtonEncabezadoSkin" id="btnDespliegue" width="100%" selected="{selected == 1? true : false}"/>
		<s:VGroup width="100%" id="vgContenedor" gap="0" click="fnReestablecerBotones(event)">
			<!--<s:ToggleButton label="Prueba1" skinClass="assets.skins.CustomToggleButtonListadoSkin" width="100%"/>
			<s:ToggleButton label="Prueba2" skinClass="assets.skins.CustomToggleButtonListadoSkin" width="100%"/>
			<s:ToggleButton label="Prueba3" skinClass="assets.skins.CustomToggleButtonListadoSkin" width="100%"/>
			<s:ToggleButton label="Prueba4" skinClass="assets.skins.CustomToggleButtonListadoSkin" width="100%"/>-->
		</s:VGroup>	
	</s:VGroup>
</s:Group>
