<?xml version="1.0" encoding="utf-8"?>
<components:CustomPanelSpark xmlns:fx="http://ns.adobe.com/mxml/2009" 
							 xmlns:s="library://ns.adobe.com/flex/spark" 
							 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="components.*" width="400" height="300"
							 creationComplete="fnSeteo(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import controller.Controller;
			
			import event.MantenedoresEvent;
			
			import model.ModelApp;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import vo.ClasificacionVO;
			[Bindable] public var obj:Object;
			[Bindable] public var ext:Boolean;
			[Bindable] public var opcion:String;
			[Bindable] public var idOpt:String;
			public var fnPost:Function;
			[Bindable] private var modelApp:ModelApp = ModelApp.getInstance();
			[Bindable] public var arr:ArrayCollection;
			public var campo1:String;
			public var claseOperacion:Class;
			public var tipoEvento:String;
			
			
			protected function fnOperar(evento:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var mantenedoresEvent:MantenedoresEvent;
				var factory:ClassFactory = new ClassFactory();
				factory.generator = claseOperacion;
				if(btnEnviar.label == 'Crear'){
					obj = factory.newInstance();
					obj[campo1] = txtNombre.text;
					if(ext){
						obj.idTiempoSolucion = ddlTiempoSolucion.selectedItem.idTiempoSolucion;
						obj.idFormaAtencion = ddlFormaAtencion.selectedItem.idFormaAtencion;
					}
					mantenedoresEvent = new MantenedoresEvent(tipoEvento, fnPost, [obj, arr]);						
				} else {
					obj[campo1] = txtNombre.text;
					if(ext){
						obj['idFormaAtencion'] = ddlFormaAtencion.selectedItem.idFormaAtencion;
						obj['idTiempoSolucion'] = ddlTiempoSolucion.selectedItem.idTiempoSolucion;
					}
					mantenedoresEvent = new MantenedoresEvent(tipoEvento, fnPost, [obj, arr]);
				}
				Controller.getInstance().dispatchEvent(mantenedoresEvent);
				fnCerrar();
			}
			
			protected function fnCerrar():void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(this);
			}
			
			protected function fnSeteo(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				if(obj){
					this.title = 'Modificar';
					txtNombre.text = obj[campo1];
					if(ext){
						ddlFormaAtencion.selectedItem = modelApp.objFormaAtencion[obj.idFormaAtencion];
						ddlTiempoSolucion.selectedItem = modelApp.objTiempoSolucion[obj.idTiempoSolucion];
					}
				}
			}
			
		]]>
	</fx:Script>
	<s:VGroup>
		<s:Form defaultButton="{btnEnviar}" width="100%">
			<s:FormItem label="Nombre" width="100%" height="30"> 
				<s:TextInput id="txtNombre" height="30" width="150"/>
			</s:FormItem>
			<s:FormItem label="Forma de atención" width="100%" height="30" visible="{ext}" includeInLayout="{ext}">
				<s:DropDownList id="ddlFormaAtencion" height="30" width="150" dataProvider="{modelApp.arrFormaAtencion}" labelField="descripcion"/>
			</s:FormItem>
			<s:FormItem label="Tiempo de solución" width="100%" height="30" visible="{ext}" includeInLayout="{ext}">
				<s:DropDownList id="ddlTiempoSolucion" height="30" width="150" dataProvider="{modelApp.arrTiempoSolucion}" labelField="descripcion"/>
			</s:FormItem>
			
			
			
		</s:Form>
		<s:HGroup>
			<s:Button id="btnEnviar" label="{obj == null ? 'Crear' : 'Actualizar'}" click="fnOperar(event)" skinClass="assets.skins.CustomButtonEnviar" width="150" height="30"/>	
			<s:Button id="btnEliminar" label="Cancelar" click="fnCerrar()" skinClass="assets.skins.CustomButtonTransparenteSkin" width="150" height="30"/>
		</s:HGroup>	
	</s:VGroup>
	
</components:CustomPanelSpark>
