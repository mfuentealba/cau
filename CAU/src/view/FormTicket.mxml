<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:controllerbd="services.controllerbd.*">
	<fx:Script>
		<![CDATA[
			import controller.Controller;
			
			import event.ClienteEvent;
			import event.MantenedoresEvent;
			
			import model.ModelApp;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.GridEvent;
			import spark.events.IndexChangeEvent;
			
			import vo.ClienteVO;
			
			[Bindable] public var clienteVO:ClienteVO = new ClienteVO();
			[Bindable] private var modelApp:ModelApp = ModelApp.getInstance();
			
			protected function fnOperarCliente(evento:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var clienteEvent:ClienteEvent;
				switch(evento.target){
					case btnEnviar:
						if(btnEnviar.label == 'Crear'){
							clienteEvent = new ClienteEvent(ClienteEvent.CREAR, clienteVO, fnNuevoCliente);						
						} else {
							clienteEvent = new ClienteEvent(ClienteEvent.MODIFICAR, clienteVO);
						}
						
						break;
					
				}
				
				Controller.getInstance().dispatchEvent(clienteEvent);
			}			
			
			protected function fnNuevoCliente(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				clienteVO = new ClienteVO();
				btnEnviar.label = 'Crear';
			}
			
			/*
			`id`, 
			`tipo_solucion`, 
			`problema`, 
			`sub_problema`, 
			`rotulo`, 
			--`dir_ip`, 
			--`cliente_rut`, 
			`fecha`, 
			`hora`, 
			`soporte`, 
			`estado`, 
			`descripcion`, 
			`hora_cierre`, 
			`fecha_cierre`, 
			`asignado_por`, 
			`comentario_cierre`, 
			`problema_e`, 
			`sub_problema_e`, 
			`solucion_dada_por`, 
			`idClasificacion`, 
			`idDescripcion`, 
			`tiempoSolucion`, 
			`administracionRemota`, 
			`tipoNivel`, 
			`reporteSolucionado`, 
			`fechaSolucion`, 
			`horaSolucion`, 
			`solucionadoPor`, 
			`clasificacionCierre`, 
			`categoriaCierre`, 
			`subcategoriaCierre`, 
			`descripcionCierre`, 
			`creadoPor`)
			*/
			
			/*protected function fnFiltrarCliente(event:*):void
			{
				// TODO Auto-generated method stub
				modelApp.arrComboClientes.refresh();
			}*/
			
			
			private function set fnCargaCliente(val:*):void{
				if(val is ClienteVO){
					var auxCliente:ClienteVO = val;
					clienteVO.id = auxCliente.id; 
					clienteVO.nombres = auxCliente.nombres;
					clienteVO.apellidos = auxCliente.apellidos;
					clienteVO.rut = auxCliente.rut;
					clienteVO.telefono = auxCliente.telefono;
					clienteVO.anexo = auxCliente.anexo;
					clienteVO.email = auxCliente.email;
					clienteVO.sucursal = auxCliente.sucursal;
					clienteVO.unidad = auxCliente.unidad;
					clienteVO.rotulo = auxCliente.rotulo;
					clienteVO.dir_ip = auxCliente.dir_ip;
					clienteVO.gerencia = auxCliente.gerencia;
					clienteVO.password = auxCliente.password;
					clienteVO.empresa = auxCliente.empresa;	
				} else {
					clienteVO = new ClienteVO();
				}
				
			}
			
			
			private function fnActualizaData(auxNuevoVO:*):void{				
				/*clasificacionVO.idClasificacion = auxNuevoVO.idClasificacion; 
				clasificacionVO.nombreClasificacion = auxNuevoVO.nombreClasificacion;
				clasificacionVO.arrCategoriasIn = auxNuevoVO.arrCategoriasIn;
				clasificacionVO.arrCategoriasOut = auxNuevoVO.arrCategoriasOut;*/
				
				var arr:Array = [];
				for each(var obj:* in auxNuevoVO.arrAsociadosIn){
					arr.push(obj.obj);
				}
				
				auxNuevoVO.arrAsociadosIn = new ArrayCollection(arr);
				//auxNuevoVO.arrAsociadosIn.refresh();
				
				//cmbCategoria.dataProvider = cmbClasificacion.selectedItem ? cmbClasificacion.selectedItem['arrAsociadosIn'] : null;
			}
			
			protected function cmbClasificacion_changeHandler(evento:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				trace('fnBuscarAsociados');
				if(evento.newIndex > -1){
					var manEvent:MantenedoresEvent;
					switch(evento.currentTarget){
						case cmbClasificacion:
							manEvent = new MantenedoresEvent(MantenedoresEvent.BUSCA_CATEGORIAS_ASOCIADAS, fnActualizaData, {idClas: cmbClasificacion.selectedItem});
							
							Controller.getInstance().dispatchEvent(manEvent);		
							break;
						case cmbCategoria:
							manEvent = new MantenedoresEvent(MantenedoresEvent.BUSCA_SUBCATEGORIAS_ASOCIADAS, fnActualizaData, {idClas: cmbClasificacion.selectedItem.idClasificacion, idCategoria: cmbCategoria.selectedItem});
							Controller.getInstance().dispatchEvent(manEvent);		
							break;
						case cmbSubcategoria:
							manEvent = new MantenedoresEvent(MantenedoresEvent.BUSCA_PROBLEMAS_ASOCIADOS, fnActualizaData, {idClas: cmbClasificacion.selectedItem.idClasificacion, idCategoria: cmbCategoria.selectedItem.idCategoria, idSubCategoria: cmbSubcategoria.selectedItem});
							Controller.getInstance().dispatchEvent(manEvent);		
							break;
						
					}
					
					
				}
			}
			
			protected function fnTiempoSolucion(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				lblTiempoSolucion.text = modelApp.objTiempoSolucion[cmbDescripcion.selectedItem['idTiempoSolucion']]['descripcion'];
			}
			
		]]>
	</fx:Script>
	<fx:Binding source="txtRut.selectedItem" destination="fnCargaCliente"/>
	<fx:Binding source="txtNombres.text" destination="clienteVO.nombres" twoWay="true"/>
	<fx:Binding source="txtApellidos.text" destination="clienteVO.apellidos" twoWay="true"/>
	<fx:Binding source="txtEmail.text" destination="clienteVO.email" twoWay="true"/>
	<fx:Binding source="cmbSucursal.selectedItem" destination="clienteVO.sucursalVO" twoWay="true"/>
	<fx:Binding source="txtTelefono.text" destination="clienteVO.telefono" twoWay="true"/>
	<fx:Binding source="txtAnexo.text" destination="clienteVO.anexo" twoWay="true"/>
	<fx:Binding source="txtUnidad.text" destination="clienteVO.unidad" twoWay="true"/>
	<fx:Binding source="txtRotulo.text" destination="clienteVO.rotulo" twoWay="true"/>
	<fx:Binding source="txtIp.text" destination="clienteVO.dir_ip" twoWay="true"/>
	<fx:Binding source="txtGerencia.text" destination="clienteVO.gerencia" twoWay="true"/>
	<fx:Binding source="txtEmpresa.text" destination="clienteVO.empresa" twoWay="true"/>
	<s:Group 
		width="100%" height="100%" xmlns:skins="assets.skins.*" xmlns:components="components.*"
		>
		
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		<components:CustomPanelSpark title="Cliente" width="100%" color="#eeeeee" imgBl="true">
			<s:Form width="100%" bottom="10">
				<s:layout>
					<s:TileLayout requestedColumnCount="4"/>
				</s:layout>
				<s:FormItem label="Rut" width="100%" height="30">
					<!--<s:TextInput id="txtRut" width="100%" height="30"/>-->
					<s:ComboBox id="txtRut" skinClass="assets.skins.ComboBoxLVSkin" dataProvider="{modelApp.arrComboClientes}" labelField="rut"/>
				</s:FormItem>
				<s:FormItem label="Nombres" width="100%" height="30">
					<s:TextInput id="txtNombres" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Apellidos" width="100%" height="30">
					<s:TextInput id="txtApellidos" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Email" width="100%" height="30">
					<s:TextInput id="txtEmail" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Sucursal" width="100%" height="30">
					<s:ComboBox id="cmbSucursal" color="#333333" skinClass="assets.skins.ComboBoxLVSkin" dataProvider="{modelApp.arrSucursales}" labelField="sucursal" width="100%" height="30"></s:ComboBox>
				</s:FormItem>
				<s:FormItem label="Teléfono" width="100%" height="30">
					<s:TextInput id="txtTelefono" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Anexo" width="100%" height="30">
					<s:TextInput id="txtAnexo" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Unidad" width="100%" height="30">
					<s:TextInput id="txtUnidad" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Rótulo" width="100%" height="30">
					<s:TextInput id="txtRotulo" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Dirección ip" width="100%" height="30">
					<s:TextInput id="txtIp" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Gerencia" width="100%" height="30">
					<s:TextInput id="txtGerencia" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Empresa" width="100%" height="30">
					<s:TextInput id="txtEmpresa" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="" width="100%" height="50">
					<s:Button id="btnEnviar" color="white" fontWeight="bold" label="{clienteVO.id == '' ? 'Crear' : 'Actualizar'}" click="fnOperarCliente(event)" width="100%" height="50" skinClass="assets.skins.ButtonSendLVSkin"/>
				</s:FormItem>
				
			</s:Form>	
		</components:CustomPanelSpark>
		
		<components:CustomPanelSpark title="Detalle Ticket" width="100%" color="#eeeeee" imgBl="true">
			<s:Form width="100%" bottom="10">
				<s:layout>
					<s:TileLayout requestedColumnCount="4"/>
				</s:layout>
				<s:FormItem label="Fecha" width="100%" height="30">
					<!--<s:TextInput id="txtRut" width="100%" height="30"/>-->
					<s:TextInput id="txtFecha"/>
				</s:FormItem>
				<s:FormItem label="Hora" width="100%" height="30">
					<s:TextInput id="txtHora" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Clasificación" width="100%" height="30">
					<s:ComboBox id="cmbClasificacion" change="cmbClasificacion_changeHandler(event)" width="100%" height="30" dataProvider="{modelApp.arrClasificacion}" labelField="nombreClasificacion"/>
				</s:FormItem>
				<s:FormItem label="Categoría" width="100%" height="30">
					<s:ComboBox id="cmbCategoria" change="cmbClasificacion_changeHandler(event)" width="100%" height="30" dataProvider="{cmbClasificacion.selectedItem ? cmbClasificacion.selectedItem['arrAsociadosIn'] : null}" labelField="nombreCategoria"/>
				</s:FormItem>
				<s:FormItem label="Subcategoría" width="100%" height="30">
					<s:ComboBox id="cmbSubcategoria" change="cmbClasificacion_changeHandler(event)" color="#333333" dataProvider="{cmbCategoria.selectedItem ? cmbCategoria.selectedItem['arrAsociadosIn'] : null}" width="100%" height="30" labelField="nombreSubCategoria"></s:ComboBox>
				</s:FormItem>
				<s:FormItem label="Descripción" width="100%" height="30">
					<s:ComboBox id="cmbDescripcion" width="100%" height="30" change="fnTiempoSolucion(event)" labelField="nombreDescripcion" dataProvider="{cmbSubcategoria.selectedItem ? cmbSubcategoria.selectedItem['arrAsociadosIn'] : null}"/>
				</s:FormItem>
				<s:FormItem label="Tiempo de Solución" width="100%" height="30">
					<s:Label id="lblTiempoSolucion" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Criticidad" width="100%" height="30">
					<s:ComboBox id="cmbCriticidad" width="100%" height="30" dataProvider="{modelApp.arrCriticidad}"/>
				</s:FormItem>
				<s:FormItem width="100%" height="30">
					<s:Button label="Enviar"/>
				</s:FormItem>
				
			</s:Form>	
		</components:CustomPanelSpark>
		
		
		
	</s:Group>	
</s:Scroller>

