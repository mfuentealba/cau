<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009"
			xmlns:s="library://ns.adobe.com/flex/spark"
			xmlns:mx="library://ns.adobe.com/flex/mx"
			xmlns:controllerbd="services.controllerbd.*"
			xmlns:skins="assets.skins.*" 
			xmlns:components="components.*"
			creationComplete="ini()">
	<fx:Script>
		<![CDATA[
			import controller.Controller;
			
			import event.ClienteEvent;
			import event.UsuarioEvent;
			
			import model.ModelApp;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.validators.EmailValidator;
			
			import spark.events.GridEvent;
			import spark.events.IndexChangeEvent;
			
			import vo.UserVO;
			
			
			[Bindable] public var usuarioVO:UserVO = new UserVO();
			[Bindable] private var modelApp:ModelApp = ModelApp.getInstance();
			
			
			protected function fnValidaUsuario(evento:MouseEvent):void{
				/*var mailValidator:EmailValidator = new EmailValidator();
				mailValidator.*/
				
				var i:int = txtEmail.text.search(/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/);
				if(i < 0){
					Alert.show("debe ingresar mail", "Atención");
					return;
				}
				if(usuarioVO.email == '' || usuarioVO.grupoResolutorVO == null || usuarioVO.nombre_completo == '' || usuarioVO.password == '' || usuarioVO.perfilVO == null || usuarioVO.tema == ''|| usuarioVO.tipoUsuarioVO == null || usuarioVO.username == ''){
					Alert.show("Debe completar todos los campos", "Atención");
					return;
				}
				fnOperarUsuario(evento);
				
			}
			
			
			
			protected function fnOperarUsuario(evento:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var usuarioEvent:UsuarioEvent;
				usuarioEvent = new UsuarioEvent(UsuarioEvent.CREAR, usuarioVO, fnConfirmacion);
				Controller.getInstance().dispatchEvent(usuarioEvent);
			}			
			
			
			private function fnConfirmacion(obj:*):void{
				if(obj is UserVO){
					CAU(this.parentApplication)['vsVistas'].selectedIndex = 0;
					Alert.show('Se ha registrado usuario ' + UserVO(obj).username + ', comuniquese con el administrador para autorizar ingreso', 'Info');
				}
			}
			
			
			
			protected function fnFiltrarCliente(event:*):void
			{
				// TODO Auto-generated method stub
				modelApp.arrUsuarios.refresh();
			}
			
			protected function cmbIdGrupoResolutor_keyUpHandler(event:KeyboardEvent):void
			{
				// TODO Auto-generated method stub
				
				//modelApp.grupoResolutorFilter = cmbIdGrupoResolutor.textInput.text;
				modelApp.arrGrupoResolutor.refresh();	
				
				
			}
			
			private function set fnCambioGruporesolutor(val:int):void{
				trace('OPCION 1 ' + val);
				if(val > -1){
					usuarioVO.idGrupoResolutor = '' + cmbIdGrupoResolutor.selectedItem['idGrupoResolutor'];
					trace('NUEVO GRUPO ' + usuarioVO.grupoResolutorVO.nombreGrupoResolutor);
				} else {
					cmbIdGrupoResolutor.selectedIndex = -1;
				}
			}
			
			/*	private function set fnCambioGruporesolutor2(val:*):void{
			trace('OPCION 2 ' + cmbIdGrupoResolutor.selectedItem['idGrupoResolutor']);
			
			if(val && !(val is String)){
			usuarioVO.idGrupoResolutor = '' + cmbIdGrupoResolutor.selectedItem['IdGrupoResolutor'];
			trace('NUEVO GRUPO ' + usuarioVO.grupoResolutorVO.nombreGrupoResolutor);
			} else {
			cmbIdGrupoResolutor.selectedIndex = -1;
			}
			}*/
			
			protected function ini():void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function btnVolver_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CAU(this.parentApplication)['vsVistas'].selectedIndex = 0;
			}
			
		]]>
	</fx:Script>
	<fx:Binding source="cmbPerfil.selectedItem.id" destination="usuarioVO.perfil" twoWay="true"/>
	<fx:Binding source="usuarioVO.perfilVO" destination="cmbPerfil.selectedItem" twoWay="true"/>
	<fx:Binding source="txtUsername.text" destination="usuarioVO.username" twoWay="true"/>
	<fx:Binding source="txtEmail.text" destination="usuarioVO.email" twoWay="true"/>
	<fx:Binding source="txtpassword.text" destination="usuarioVO.password" twoWay="true"/>
	<fx:Binding source="txtNombreCompleto.text" destination="usuarioVO.nombre_completo" twoWay="true"/>
	<fx:Binding source="txtTema.text" destination="usuarioVO.tema" twoWay="true"/>
	<fx:Binding source="cmbTipoUsuario.selectedItem.id" destination="usuarioVO.tipoUsuario" twoWay="true"/>
	<fx:Binding source="usuarioVO.tipoUsuarioVO" destination="cmbTipoUsuario.selectedItem" twoWay="true"/>	
	<fx:Binding source="usuarioVO.grupoResolutorVO" destination="cmbIdGrupoResolutor.selectedItem"/>
	<fx:Binding source="cmbIdGrupoResolutor.selectedIndex" destination="fnCambioGruporesolutor"/>
	
	<!--<fx:Binding source="cmbIdGrupoResolutor.selectedItem" destination="fnCambioGruporesolutor2"/>-->
	
	<!--<fx:Declarations>
	<mx:EmailValidator source="{txtEmail}" property="text" 
	trigger="{txtEmail}" triggerEvent="focusOut"
	invalidDomainError="Mal"
	invalidCharError="Caracter malo"
	invalidIPDomainError="IP"
	required="true"
	requiredFieldError="lll"
	invalidPeriodsInDomainError="Periodo"
	valid="Alert.show('Validation Succeeded!')"/>
	</fx:Declarations>-->

	<s:Group 
		width="100%" height="100%"
		>
		
		<s:layout>
			<s:HorizontalLayout paddingBottom="50" horizontalAlign="center"/>
		</s:layout>
		<components:CustomPanelSpark id="cpMant" title="Registro" width="400" height="600" color="#eeeeee" imgBl="true">
			<s:Form id="formMant" width="100%">
				<s:FormItem label="perfil" width="100%" height="30">
					<s:ComboBox id="cmbPerfil" color="#333333" skinClass="assets.skins.ComboBoxLVNoEditSkin" dataProvider="{modelApp.arrPerfiles}" labelField="perfil" width="100%"></s:ComboBox>
				</s:FormItem>
				<s:FormItem label="username" width="100%" height="30">
					<s:TextInput id="txtUsername" height="30" width="100%"/>
				</s:FormItem>
				<s:FormItem label="email" width="100%" height="30">
					<s:TextInput id="txtEmail" height="30" width="100%"/>
				</s:FormItem>
				<s:FormItem label="password" width="100%" height="30">
					<s:TextInput id="txtpassword" height="30" width="100%"/>
				</s:FormItem>
				<s:FormItem label="Repetir password" width="100%" height="30">
					<s:TextInput id="txtRepassword" height="30" width="100%"/>
				</s:FormItem>
				<s:FormItem label="Nombre completo" width="100%" height="30">
					<s:TextInput id="txtNombreCompleto" height="30" width="100%"/>
				</s:FormItem>
				<s:FormItem label="tema" width="100%" height="30">
					<s:TextInput id="txtTema" height="30" width="100%"/>
				</s:FormItem>
				<s:FormItem label="tipoUsuario" width="100%" height="30">
					<s:ComboBox id="cmbTipoUsuario" color="#333333" skinClass="assets.skins.ComboBoxLVNoEditSkin" dataProvider="{modelApp.arrTipoUsuario}" labelField="valor" width="100%"></s:ComboBox>
				</s:FormItem>
				<s:FormItem label="idGrupoResolutor" width="100%" height="30">
					<!--<s:ComboBox id="cmbIdGrupoResolutor" keyUp="cmbIdGrupoResolutor_keyUpHandler(event)" color="#333333" skinClass="assets.skins.ComboBoxLVSkin" changing="cmbIdGrupoResolutor_changingHandler(event)" change="cmbIdGrupoResolutor_changeHandler(event)" dataProvider="{modelApp.arrGrupoResolutor}" labelField="nombreGrupoResolutor" width="100%"></s:ComboBox>-->
					<components:CustomComboBox id="cmbIdGrupoResolutor" color="#333333" dataProvider="{modelApp.arrGrupoResolutor}" labelField="nombreGrupoResolutor" width="100%"></components:CustomComboBox>
				</s:FormItem>
				
				<s:FormItem label="" width="100%" height="50">
					<s:Button id="btnEnviar" color="white" fontWeight="bold" label="Crear" click="fnValidaUsuario(event)" height="50" skinClass="assets.skins.CustomButtonEnviar" width="100%"/>
				</s:FormItem>
				<s:FormItem label="" width="100%" height="50">
					<s:Button id="btnVolver" color="white" fontWeight="bold" label="Volver" click="btnVolver_clickHandler(event)" height="50" skinClass="assets.skins.CustomButtonTransparenteSkin" width="100%"/>
				</s:FormItem>
			</s:Form>	
		
			
		</components:CustomPanelSpark>
		
		
	</s:Group>
	
</s:Scroller>
