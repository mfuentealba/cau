<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:controllerbd="services.controllerbd.*">
	<fx:Script>
		<![CDATA[
			import controller.Controller;
			
			import event.ClienteEvent;
			
			import model.ModelApp;
			
			import spark.events.GridEvent;
			
			import vo.ClienteVO;
			
			[Bindable] public var clienteVO:ClienteVO = new ClienteVO();
			[Bindable] private var modelApp:ModelApp = ModelApp.getInstance();
			
			protected function fnOperarCliente(evento:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var clienteEvent:ClienteEvent;
				switch(evento.target){
					case btnEnviar:
						if(btnEnviar.label == 'Crear'){
							clienteEvent = new ClienteEvent(ClienteEvent.CREAR, clienteVO, fnNuevoCliente);						
						} else {
							clienteEvent = new ClienteEvent(ClienteEvent.MODIFICAR, clienteVO, fnActualizaGrilla);
						}
						
						break;
					case btnEliminar:
						clienteEvent = new ClienteEvent(ClienteEvent.ELIMINAR, clienteVO, fnRemueveGrilla);
						
						break;
				}
				
				Controller.getInstance().dispatchEvent(clienteEvent);
			}			
			
			protected function fnNuevoCliente(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				clienteVO = new ClienteVO();
				btnEnviar.label = 'Crear';
			}
			
			protected function fnSelectCliente(evento:GridEvent):void
			{
				// TODO Auto-generated method stub
				//sucursales = dgClientees.selectedItem as ClienteVO;
				if(evento.rowIndex > -1){
					var auxCliente:ClienteVO = dgClientes.selectedItem as ClienteVO;
					clienteVO.id = auxCliente.id; 
					clienteVO.nombres = auxCliente.nombres;
					clienteVO.apellidos = auxCliente.apellidos;
					clienteVO.rut = auxCliente.rut;
					clienteVO.telefono = auxCliente.telefono;
					clienteVO.anexo = auxCliente.anexo;
					clienteVO.email = auxCliente.email;
					clienteVO.sucursal = auxCliente.sucursal;
					clienteVO.unidad = auxCliente.unidad;
					clienteVO.rotulo = auxCliente.rotulo;
					clienteVO.dir_ip = auxCliente.dir_ip;
					clienteVO.gerencia = auxCliente.gerencia;
					clienteVO.password = auxCliente.password;
					clienteVO.empresa = auxCliente.empresa;
				}
				
			}
			
			private function fnActualizaGrilla(item:ClienteVO):void{
				var auxCliente:ClienteVO = dgClientes.selectedItem as ClienteVO;
				auxCliente.id = item.id; 
				auxCliente.nombres = item.nombres;
				auxCliente.apellidos = item.apellidos;
				auxCliente.rut = item.rut;
				auxCliente.telefono = item.telefono;
				auxCliente.anexo = item.anexo;
				auxCliente.email = item.email;
				auxCliente.sucursal = item.sucursal;
				auxCliente.unidad = item.unidad;
				auxCliente.rotulo = item.rotulo;
				auxCliente.dir_ip = item.dir_ip;
				auxCliente.gerencia = item.gerencia;
				auxCliente.password = item.password;
				auxCliente.empresa = item.empresa;	
			}
			
			private function fnRemueveGrilla(id:String):void{
				clienteVO = new ClienteVO();
				var auxCliente:ClienteVO = dgClientes.selectedItem as ClienteVO;
				modelApp.arrClientes.removeItemAt(modelApp.arrClientes.getItemIndex(auxCliente));
			}
			
			
			
			protected function fnFiltrarCliente(event:*):void
			{
				// TODO Auto-generated method stub
				modelApp.arrClientes.refresh();
			}
			
			
		]]>
	</fx:Script>
	<fx:Binding source="idLbl.text" destination="clienteVO.id" twoWay="true"/>
	<fx:Binding source="txtRut.text" destination="clienteVO.rut" twoWay="true"/>
	<fx:Binding source="txtNombres.text" destination="clienteVO.nombres" twoWay="true"/>
	<fx:Binding source="txtApellidos.text" destination="clienteVO.apellidos" twoWay="true"/>
	<fx:Binding source="txtEmail.text" destination="clienteVO.email" twoWay="true"/>
	<fx:Binding source="cmbSucursal.selectedItem" destination="clienteVO.sucursalVO" twoWay="true"/>
	<fx:Binding source="txtTelefono.text" destination="clienteVO.telefono" twoWay="true"/>
	<fx:Binding source="txtAnexo.text" destination="clienteVO.anexo" twoWay="true"/>
	<fx:Binding source="txtUnidad.text" destination="clienteVO.unidad" twoWay="true"/>
	<fx:Binding source="txtRotulo.text" destination="clienteVO.rotulo" twoWay="true"/>
	<fx:Binding source="txtIp.text" destination="clienteVO.dir_ip" twoWay="true"/>
	<fx:Binding source="txtGerencia.text" destination="clienteVO.gerencia" twoWay="true"/>
	<fx:Binding source="txtPassword.text" destination="clienteVO.password" twoWay="true"/>
	<fx:Binding source="txtEmpresa.text" destination="clienteVO.empresa" twoWay="true"/>
	<fx:Binding source="txtFiltro.text" destination="modelApp.clientesFilter" twoWay="true"/>
	<s:Group 
		width="100%" height="100%" xmlns:skins="assets.skins.*" xmlns:components="components.*"
		>
		
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		<components:CustomPanelSpark title="Clientes" width="20%" color="#eeeeee" imgBl="true">
			<s:Form width="100%">
				<s:FormItem label="ID" width="100%" height="30">
					<s:Label id="idLbl" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Rut" width="100%" height="30">
					<s:TextInput id="txtRut" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Nombres" width="100%" height="30">
					<s:TextInput id="txtNombres" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Apellidos" width="100%" height="30">
					<s:TextInput id="txtApellidos" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Email" width="100%" height="30">
					<s:TextInput id="txtEmail" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Sucursal" width="100%" height="30">
					<s:ComboBox id="cmbSucursal" color="#333333" skinClass="assets.skins.ComboBoxLVSkin" dataProvider="{modelApp.arrSucursales}" labelField="sucursal" width="100%" height="30"></s:ComboBox>
				</s:FormItem>
				<s:FormItem label="Teléfono" width="100%" height="30">
					<s:TextInput id="txtTelefono" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Anexo" width="100%" height="30">
					<s:TextInput id="txtAnexo" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Unidad" width="100%" height="30">
					<s:TextInput id="txtUnidad" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Rótulo" width="100%" height="30">
					<s:TextInput id="txtRotulo" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Dirección ip" width="100%" height="30">
					<s:TextInput id="txtIp" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Gerencia" width="100%" height="30">
					<s:TextInput id="txtGerencia" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Password" width="100%" height="30">
					<s:TextInput id="txtPassword" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="Empresa" width="100%" height="30">
					<s:TextInput id="txtEmpresa" width="100%" height="30"/>
				</s:FormItem>
				<s:FormItem label="" width="100%" height="50">
					<s:Button id="btnEnviar" color="white" fontWeight="bold" label="{clienteVO.id == '' ? 'Crear' : 'Actualizar'}" click="fnOperarCliente(event)" width="100%" height="50" skinClass="assets.skins.ButtonSendLVSkin"/>
				</s:FormItem>
				<s:FormItem label="" width="100%" height="50">
					<s:Button id="btnNuevo" color="white" fontWeight="bold" label="Nuevo Cliente" click="fnNuevoCliente(event)" height="50" width="100%" skinClass="assets.skins.ButtonCleanLVSkin"/>
				</s:FormItem>
				<s:FormItem label="" width="100%" height="50">
					<s:Button id="btnEliminar" color="white" fontWeight="bold" label="Eliminar" click="fnOperarCliente(event)" enabled="false" height="50" width="100%" skinClass="assets.skins.ButtonCleanLVSkin"/>
				</s:FormItem>
				
			</s:Form>	
		</components:CustomPanelSpark>
		<components:CustomPanelSpark title="Lista de clientes generados" width="100%" height="100%">
			<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
				<s:Group width="100%">
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="#333333"/>
						</s:fill>
					</s:Rect>
					<s:HGroup color="#fefefe" verticalAlign="middle" width="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"><!-- paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"-->
						<s:Label text="Filtro" fontWeight="bold"/>
						<s:TextInput id="txtFiltro" change="fnFiltrarCliente(event)"/>
					</s:HGroup>
				</s:Group>
				<s:DataGrid id="dgClientes" width="100%" height="100%" 
							requestedRowCount="4" dataProvider="{modelApp.arrClientes}" gridClick="fnSelectCliente(event)"
							rowHeight="35" resizableColumns="false">
					<s:columns>
						<s:ArrayList>
							<s:GridColumn dataField="id" headerText="id"></s:GridColumn>
							<s:GridColumn dataField="rut" headerText="rut"></s:GridColumn>
							<s:GridColumn dataField="nombres" headerText="nombres"></s:GridColumn>
							<s:GridColumn dataField="apellidos" headerText="apellidos"></s:GridColumn>
							<s:GridColumn dataField="email" headerText="email"></s:GridColumn>
							<s:GridColumn dataField="sucursalVO.sucursal" headerText="sucursal"></s:GridColumn>
							<s:GridColumn dataField="telefono" headerText="telefono"></s:GridColumn>
							<s:GridColumn dataField="anexo" headerText="anexo"></s:GridColumn>
							<s:GridColumn dataField="unidad" headerText="unidad"></s:GridColumn>
							<s:GridColumn dataField="rotulo" headerText="rotulo"></s:GridColumn>
							<s:GridColumn dataField="dir_ip" headerText="dir_ip"></s:GridColumn>
							<s:GridColumn dataField="gerencia" headerText="gerencia"></s:GridColumn>
							<s:GridColumn dataField="password" headerText="password"></s:GridColumn>
							<s:GridColumn dataField="empresa" headerText="empresa"></s:GridColumn>
						</s:ArrayList>
					</s:columns>
					
				</s:DataGrid>
			</s:VGroup>	
		</components:CustomPanelSpark>
		
		
		
	</s:Group>	
</s:Scroller>

